{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/matheus/Documents/testeFront/Teste-FrontEnd---Software/src/components/Main/Main.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useCallback } from \"react\";\nimport axios from \"axios\";\nimport { history } from \"../../history\";\nimport { ENDPOINT_TOKEN } from \"../../services/auth\";\nimport \"./Main.css\";\n\nconst Main = () => {\n  _s();\n\n  const [stock, setStock] = useState([]);\n  const URL = `https://crudcrud.com/api/${ENDPOINT_TOKEN}/stock`; //this function, takes the data from the endpoint and presents it in the application\n\n  const getStockData = useCallback(async URL => {\n    await axios.get(URL).then(resp => {\n      if (resp.data[0].length === 0) {\n        setStock({\n          _id: \"\",\n          product: \"\",\n          quantity: 0,\n          price: 0,\n          client: \"\",\n          active: false\n        });\n      } else {\n        setStock(resp.data);\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []); //this function, redirects to the edit page with the data to edit\n\n  const editForm = () => {\n    history.push(\"/form\");\n  }; //this function, removes data from a line at the endpoint\n\n\n  const deleteProduct = async id => {\n    const table = document.getElementById(\"tableStock\");\n    const lines = table.rows;\n    const linesArray = Object.values(lines);\n    const index = linesArray.findIndex(item => item.id === id);\n    table.deleteRow(index);\n    await axios.delete(`${URL}/${id}`).then(resp => {\n      console.log(resp);\n    }).catch(err => {\n      console.log(err);\n    });\n  }; //effect of loading the data presented on screen\n\n\n  useEffect(() => {\n    getStockData(URL); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  if (stock.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tableList\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"create\",\n        children: \"Create a new product\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Nenhum item cadastrado em stock\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tableList\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"create\",\n        children: \"Create a new product\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        id: \"tableStock\",\n        className: \"responsive-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            className: \"tableTitle\",\n            children: [Object.keys(stock[0]).map(item => {\n              return /*#__PURE__*/_jsxDEV(\"th\", {\n                children: item\n              }, item, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 24\n              }, this);\n            }), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \" \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \" \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: Object.values(stock).map(name => {\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              id: name._id,\n              className: \"tableValues\",\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: name._id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: name.product\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: name.price\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: name.quantity\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: name.client\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: name.active ? \"Yes\" : \"No\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  id: \"select\",\n                  onClick: editForm,\n                  children: \"Select\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 102,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  id: \"delete\",\n                  onClick: e => {\n                    deleteProduct(name._id);\n                  },\n                  children: \"Delete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 107,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 19\n              }, this)]\n            }, name._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this);\n  }\n};\n\n_s(Main, \"q1C8Xfo/5FgKBih2CE0ppSBX49A=\");\n\n_c = Main;\nexport default Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["/home/matheus/Documents/testeFront/Teste-FrontEnd---Software/src/components/Main/Main.js"],"names":["React","useEffect","useState","useCallback","axios","history","ENDPOINT_TOKEN","Main","stock","setStock","URL","getStockData","get","then","resp","data","length","_id","product","quantity","price","client","active","catch","err","console","log","editForm","push","deleteProduct","id","table","document","getElementById","lines","rows","linesArray","Object","values","index","findIndex","item","deleteRow","delete","keys","map","name","e"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useCallback } from \"react\";\nimport axios from \"axios\";\n\nimport { history } from \"../../history\";\n\nimport { ENDPOINT_TOKEN } from \"../../services/auth\";\n\nimport \"./Main.css\";\n\nconst Main = () => {\n  const [stock, setStock] = useState([]);\n\n  const URL = `https://crudcrud.com/api/${ENDPOINT_TOKEN}/stock`;\n\n  //this function, takes the data from the endpoint and presents it in the application\n  const getStockData = useCallback(async (URL) => {\n    await axios\n      .get(URL)\n      .then((resp) => {\n        if (resp.data[0].length === 0) {\n          setStock({\n            _id: \"\",\n            product: \"\",\n            quantity: 0,\n            price: 0,\n            client: \"\",\n            active: false,\n          });\n        } else {\n          setStock(resp.data);\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, []);\n\n  //this function, redirects to the edit page with the data to edit\n  const editForm = () => {\n    history.push(\"/form\");\n  };\n\n  //this function, removes data from a line at the endpoint\n  const deleteProduct = async (id) => {\n    const table = document.getElementById(\"tableStock\");\n    const lines = table.rows;\n\n    const linesArray = Object.values(lines);\n\n    const index = linesArray.findIndex((item) => item.id === id);\n\n    table.deleteRow(index);\n\n    await axios\n      .delete(`${URL}/${id}`)\n      .then((resp) => {\n        console.log(resp);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  //effect of loading the data presented on screen\n  useEffect(() => {\n    getStockData(URL);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  if (stock.length === 0) {\n    return(\n      <div className=\"tableList\">\n        <button id=\"create\">Create a new product</button>\n        <h4>Nenhum item cadastrado em stock</h4>\n      </div>\n    )\n  }else{\n    return (\n      <div className=\"tableList\">\n        <button id=\"create\">Create a new product</button>\n        <table id=\"tableStock\" className=\"responsive-table\">\n          <thead>\n            <tr className=\"tableTitle\">\n              {Object.keys(stock[0]).map((item) => {\n                return <th key={item}>{item}</th>;\n              })}\n              <th> </th>\n              <th> </th>\n            </tr>\n          </thead>\n          <tbody>\n            {Object.values(stock).map((name) => {\n              return (\n                <tr id={name._id} className=\"tableValues\" key={name._id}>\n                  <td>{name._id}</td>\n                  <td>{name.product}</td>\n                  <td>{name.price}</td>\n                  <td>{name.quantity}</td>\n                  <td>{name.client}</td>\n                  <td>{name.active ? \"Yes\" : \"No\"}</td>\n                  <td>\n                    <button id=\"select\" onClick={editForm}>\n                      Select\n                    </button>\n                  </td>\n                  <td>\n                    <button\n                      id=\"delete\"\n                      onClick={(e) => {\n                        deleteProduct(name._id);\n                      }}\n                    >\n                      Delete\n                    </button>\n                  </td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n};\n\nexport default Main;\n"]},"metadata":{},"sourceType":"module"}