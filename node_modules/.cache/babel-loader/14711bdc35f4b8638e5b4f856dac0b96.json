{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/matheus/Documents/testeFront/Teste-FrontEnd---Software/src/components/Main/Main.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useCallback } from \"react\";\nimport axios from \"axios\";\nimport { history } from \"../../history\";\nimport { ENDPOINT_TOKEN } from \"../../services/auth\";\nimport \"./Main.css\";\n\nconst Main = () => {\n  _s();\n\n  const [stock, setStock] = useState([{\n    _id: \"\",\n    product: \"\",\n    quantity: 0,\n    price: 0,\n    client: \"\",\n    active: false\n  }]);\n  const URL = `https://crudcrud.com/api/${ENDPOINT_TOKEN}/stock`; //this function, takes the data from the endpoint and presents it in the application\n\n  const getStockData = useCallback(async URL => {\n    await axios.get(URL).then(resp => {\n      if (resp.data[0].length === 0) {\n        setStock({\n          _id: \"\",\n          product: \"\",\n          quantity: 0,\n          price: 0,\n          client: \"\",\n          active: false\n        });\n      } else {\n        setStock(resp.data);\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []); //this function, redirects to the edit page with the data to edit\n\n  const editForm = () => {\n    history.push(\"/form\");\n  }; //this function, removes data from a line at the endpoint\n\n\n  const deleteProduct = async id => {\n    const tabela = document.getElementById(\"tableStock\");\n    const linhas = tabela.rows;\n    const arr = Object.values(linhas);\n    const index = arr.findIndex(item => item.id === id);\n    tabela.deleteRow(index);\n    await axios.delete(`${URL}/${id}`).then(resp => {\n      console.log(resp);\n    }).catch(err => {\n      console.log(err);\n    });\n  }; //effect of loading the data presented on screen\n\n\n  useEffect(() => {\n    getStockData(URL); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  if (stock.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Ol\\xE1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this);\n  }\n};\n\n_s(Main, \"s3Cf9PV0+ugG6lgIkQ5oobidfE8=\");\n\n_c = Main;\nexport default Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["/home/matheus/Documents/testeFront/Teste-FrontEnd---Software/src/components/Main/Main.js"],"names":["React","useEffect","useState","useCallback","axios","history","ENDPOINT_TOKEN","Main","stock","setStock","_id","product","quantity","price","client","active","URL","getStockData","get","then","resp","data","length","catch","err","console","log","editForm","push","deleteProduct","id","tabela","document","getElementById","linhas","rows","arr","Object","values","index","findIndex","item","deleteRow","delete"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useCallback } from \"react\";\nimport axios from \"axios\";\n\nimport { history } from \"../../history\";\n\nimport { ENDPOINT_TOKEN } from \"../../services/auth\";\n\nimport \"./Main.css\";\n\nconst Main = () => {\n  const [stock, setStock] = useState([\n    {\n      _id: \"\",\n      product: \"\",\n      quantity: 0,\n      price: 0,\n      client: \"\",\n      active: false,\n    },\n  ]);\n\n  const URL = `https://crudcrud.com/api/${ENDPOINT_TOKEN}/stock`;\n\n  //this function, takes the data from the endpoint and presents it in the application\n  const getStockData = useCallback(async (URL) => {\n    await axios\n      .get(URL)\n      .then((resp) => {\n        if (resp.data[0].length === 0) {\n          setStock({\n            _id: \"\",\n            product: \"\",\n            quantity: 0,\n            price: 0,\n            client: \"\",\n            active: false,\n          });\n        } else {\n          setStock(resp.data);\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, []);\n\n  //this function, redirects to the edit page with the data to edit\n  const editForm = () => {\n    history.push(\"/form\");\n  };\n\n  //this function, removes data from a line at the endpoint\n  const deleteProduct = async (id) => {\n    const tabela = document.getElementById(\"tableStock\");\n    const linhas = tabela.rows;\n\n    const arr = Object.values(linhas);\n\n    const index = arr.findIndex((item) => item.id === id);\n\n    tabela.deleteRow(index);\n\n    await axios\n      .delete(`${URL}/${id}`)\n      .then((resp) => {\n        console.log(resp);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  //effect of loading the data presented on screen\n  useEffect(() => {\n    getStockData(URL);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  if (stock.length === 0) {\n    return (\n      <div>\n        <h1>Ol√°</h1>\n      </div>\n    )\n  }\n};\n\nexport default Main;\n"]},"metadata":{},"sourceType":"module"}